{"version":3,"file":"static/js/656.6bf7906c.chunk.js","mappings":"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","sources":["components/Styles.js","components/Contacts/ContactForm.jsx","components/Contacts/Filter.jsx","components/Contacts/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title1 = styled.h1`\n  font-family: georgia, serif;\n  font-size: 38px;\n  font-weight: 500;\n  text-transform: uppercase;\n  line-height: 1;\n  margin-top: 20px;\n  margin-left: 15px;\n`;\nexport const Title2 = styled.h2`\n  font-family: georgia, serif;\n  font-size: 32px;\n  font-weight: 500;\n  text-transform: uppercase;\n  line-height: 1;\n  margin-top: 30px;\n  margin-left: 15px;\n  margin-bottom: 30px;\n`;\n\nexport const Form = styled.form`\n  font-family: georgia, serif;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 150%;\n  max-width: 450px;\n  margin-left: 20px;\n  padding: 20px;\n  border: 2px solid #757575;\n  border-radius: 5px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\nexport const Group = styled.div`\n  position: relative;\n  margin-bottom: 25px;\n`;\nexport const Label = styled.label`\n  color: #999;\n  font-size: 20px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 0.2s ease all;\n  -moz-transition: 0.2s ease all;\n  -webkit-transition: 0.2s ease all;\n`;\nexport const Input = styled.input`\n  font-family: georgia, serif;\n  font-size: 20px;\n  font-weight: normal;\n  line-height: 150%;\n\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 300px;\n  border: none;\n  border-bottom: 1px solid #757575;\n  &:focus {\n    outline: none;\n  }\n  &:focus ~ label,\n  &:valid ~ label {\n    top: -20px;\n    font-size: 16px;\n  }\n`;\n\nexport const Button = styled.button`\n  appearance: none;\n  background-color: transparent;\n  border: 1px solid #1a1a1a;\n  border-radius: 15px;\n  box-sizing: border-box;\n  cursor: pointer;\n  align-self: end;\n\n  font-family: georgia, serif;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 150%;\n  padding: 0px;\n  max-width: 200px;\n\n  outline: none;\n  padding: 6px 8px;\n  text-align: center;\n  transition: all 300ms cubic-bezier(0.23, 1, 0.32, 1);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  will-change: transform;\n  text-transform: uppercase;\n\n  &:disabled {\n    pointer-events: none;\n  }\n\n  &:hover {\n    color: #fff;\n    background-color: #1a1a1a;\n    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n  }\n\n  &:active {\n    box-shadow: none;\n  }\n`;\n\nexport const FilterLabel = styled.label`\n  font-family: georgia, serif;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 150%;\n  margin-left: 25px;\n  font-style: italic;\n`;\nexport const FilterInput = styled.input`\n  font-size: 20px;\n  font-family: georgia, serif;\n  font-weight: normal;\n  line-height: 150%;\n  margin-left: 15px;\n  width: 210px;\n  border: none;\n  border-bottom: 1px solid #1a1a1a;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const List = styled.ul`\n  max-width: 470px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n  list-style: none;\n  font-family: georgia, serif;\n  font-size: 20px;\n  line-height: 125%;\n  position: relative;\n`;\nexport const DelButton = styled(Button)`\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 150%;\n  max-width: 200px;\n  outline: none;\n  padding: 2px 6px;\n  position: absolute;\n  right: 0;\n  top: 50%;\n  transform: translateY(-48%);\n`;\nexport const Text = styled.p`\n  max-width: 400px;\n  word-wrap: break-word;\n`;\n","import { Form, Button, Group, Label, Input } from '../Styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeName, changeNumber } from 'redux/contacts/createContact';\n\nimport { selectContacts, selectName, selectNumber } from 'redux/selesctors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const name = useSelector(selectName);\n  const number = useSelector(selectNumber);\n\n  const dispatch = useDispatch();\n  const nam = value => dispatch(changeName(value));\n  const num = value => dispatch(changeNumber(value));\n\n  const createContact = data => {\n    const newContact = {\n      ...data,\n    };\n    dispatch(addContact(newContact));\n  };\n\n  const handleChange = ({ target }) => {\n    if (target.name === 'name') {\n      nam(target.value);\n    } else if (target.name === 'number') {\n      num(target.value);\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      createContact({\n        name,\n        number,\n      });\n      nam('');\n      num('');\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Group>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n        <Label>Name</Label>\n      </Group>\n      <Group>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n        <Label>Number </Label>\n      </Group>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterLabel, FilterInput } from '../Styles';\nimport { updateFilter } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/selesctors';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n  const handleChange = ({ target }) => {\n    dispatch(updateFilter(target.value));\n  };\n\n  return (\n    <>\n      <FilterLabel>\n        Find contacts by name:\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </FilterLabel>\n    </>\n  );\n};\nexport default Filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { List, Item, DelButton, Text, Title2 } from '../Styles';\nimport { delContact } from 'redux/contacts/contactsSlice';\nimport { selectContacts, selectFilter } from 'redux/selesctors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/selesctors';\nimport { useAuth } from 'hooks';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const { isLoggedIn } = useAuth();\n\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n    dispatch(delContact(contacts.filter(contact => contact.id !== id)));\n  };\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <List>\n      {isLoading && !error && <Title2>Request in progress...</Title2>}\n      {error ? (\n        <Title2>{error}</Title2>\n      ) : !isLoggedIn ? (\n        <Title2>Please, sign up or login</Title2>\n      ) : (\n        filteredContacts.map(contact => (\n          <Item key={contact.id} data-key={contact.id}>\n            <Text>\n              {contact.name}: {contact.number + '  '}\n            </Text>\n            <DelButton type=\"button\" onClick={() => handleDelete(contact.id)}>\n              Delete\n            </DelButton>\n          </Item>\n        ))\n      )}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { Title1, Title2 } from '../components/Styles';\n\nimport ContactForm from '../components/Contacts/ContactForm';\nimport Filter from '../components/Contacts/Filter';\nimport ContactList from '../components/Contacts/ContactList';\nimport { useAuth } from 'hooks';\nimport { Navigate } from 'react-router-dom';\n\nconst Contacts = () => {\n  const { isLoggedIn } = useAuth();\n\n  return isLoggedIn ? (\n    <>\n      <Title1>Phonebook</Title1>\n      <ContactForm />\n      <Title2>Contacts</Title2>\n      <Filter />\n      <ContactList />\n    </>\n  ) : (\n    <>\n      <Navigate to=\"/goit-react-hw-08-phonebook\" />\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["Title1","styled","_templateObject","_taggedTemplateLiteral","Title2","_templateObject2","Form","_templateObject3","Group","_templateObject4","Label","_templateObject5","Input","_templateObject6","Button","_templateObject7","FilterLabel","_templateObject8","FilterInput","_templateObject9","List","_templateObject10","Item","_templateObject11","DelButton","_templateObject12","Text","_templateObject13","contacts","useSelector","selectContacts","name","selectName","number","selectNumber","dispatch","useDispatch","nam","value","changeName","num","changeNumber","handleChange","_ref","target","_jsxs","onSubmit","evt","preventDefault","some","contact","alert","concat","data","newContact","_objectSpread","addContact","createContact","children","_jsx","type","title","required","onChange","filter","selectFilter","_Fragment","updateFilter","isLoading","selectIsLoading","error","selectError","isLoggedIn","useAuth","filteredContacts","toLowerCase","includes","map","id","onClick","deleteContact","delContact","ContactForm","Filter","ContactList","Navigate","to"],"sourceRoot":""}